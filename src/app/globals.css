@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: Arial, Helvetica, sans-serif;
}

@layer base {
  :root {
    --background: 260 20% 6%; /* Dark Violet */
    --foreground: 260 10% 85%;

    --card: 260 20% 10%;
    --card-foreground: 260 10% 85%;
    
    --popover: 260 20% 6%;
    --popover-foreground: 260 10% 85%;
    
    --primary: 199 100% 75%; /* Electric Blue */
    --primary-foreground: 199 20% 10%;
    
    --secondary: 260 20% 14%;
    --secondary-foreground: 260 10% 95%;
    
    --muted: 260 20% 14%;
    --muted-foreground: 260 10% 60%;
    
    --accent: 278 89% 74%; /* Vibrant Purple */
    --accent-foreground: 278 10% 10%;
    
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    
    --border: 260 20% 15%;
    --input: 260 20% 15%;
    --ring: 199 100% 75%;
    --radius: 0.5rem;
  }
  
  .dark {
    --background: 260 20% 6%;
    --foreground: 260 10% 85%;
    
    --card: 260 20% 10%;
    --card-foreground: 260 10% 85%;
    
    --popover: 260 20% 6%;
    --popover-foreground: 260 10% 85%;
    
    --primary: 199 100% 75%;
    --primary-foreground: 199 20% 10%;
    
    --secondary: 260 20% 14%;
    --secondary-foreground: 260 10% 95%;
    
    --muted: 260 20% 14%;
    --muted-foreground: 260 10% 60%;
    
    --accent: 278 89% 74%;
    --accent-foreground: 278 10% 10%;
    
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    
    --border: 260 20% 15%;
    --input: 260 20% 15%;
    --ring: 199 100% 75%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
  ::selection {
    @apply bg-primary/30;
  }
}

.prose {
    --tw-prose-body: theme(colors.foreground / 0.9);
    --tw-prose-headings: theme(colors.primary.DEFAULT);
    --tw-prose-lead: theme(colors.foreground / 0.8);
    --tw-prose-links: theme(colors.accent.DEFAULT);
    --tw-prose-bold: theme(colors.foreground);
    --tw-prose-counters: theme(colors.muted.foreground);
    --tw-prose-bullets: theme(colors.border);
    --tw-prose-hr: theme(colors.border);
    --tw-prose-quotes: theme(colors.primary.DEFAULT);
    --tw-prose-quote-borders: theme(colors.border);
    --tw-prose-captions: theme(colors.muted.foreground);
    --tw-prose-code: theme(colors.primary.DEFAULT);
    --tw-prose-pre-code: theme(colors.primary.foreground);
    --tw-prose-pre-bg: theme(colors.primary.DEFAULT);
    --tw-prose-th-borders: theme(colors.border);
    --tw-prose-td-borders: theme(colors.border);
}

@property --angle {
  syntax: '<angle>';
  initial-value: 0deg;
  inherits: false;
}

@keyframes spin {
  to {
    --angle: 360deg;
  }
}

.animated-border {
  position: relative;
  padding: 1px;
  background: conic-gradient(
    from var(--angle),
    transparent 0%,
    hsl(var(--primary) / 0.5) 20%,
    hsl(var(--accent) / 0.8) 35%,
    hsl(var(--primary) / 0.5) 50%,
    transparent 70%,
    transparent 100%
  );
  animation: spin 8s linear infinite;
  border-radius: 9999px; /* This should match the inner element's border-radius */
}

.animated-border > * {
  border-radius: inherit;
}

.animated-border-pill {
  position: relative;
  padding: 1px;
  background: conic-gradient(
    from var(--angle),
    transparent 0%,
    hsl(var(--primary) / 0.5) 20%,
    hsl(var(--accent) / 0.8) 35%,
    hsl(var(--primary) / 0.5) 50%,
    transparent 70%,
    transparent 100%
  );
  animation: spin 8s linear infinite;
}

.animated-border-pill > * {
  border-radius: inherit;
}

.animated-border-box {
  position: relative;
  padding: 1px;
   background: conic-gradient(
    from var(--angle),
    transparent 0%,
    hsl(var(--primary) / 0.5) 20%,
    hsl(var(--accent) / 0.8) 35%,
    hsl(var(--primary) / 0.5) 50%,
    transparent 70%,
    transparent 100%
  );
  animation: spin 8s linear infinite;
}

.animated-border-box > * {
  border-radius: inherit;
}


.gradient-heading {
    @apply bg-gradient-to-r from-primary to-accent text-transparent bg-clip-text;
}

.animated-grid-background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
}

@keyframes pan {
  0% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(10px, -10px);
  }
  50% {
    transform: translate(0, 0);
  }
  75% {
    transform: translate(-10px, 10px);
  }
  100% {
    transform: translate(0, 0);
  }
}

.animated-grid {
  width: 200%;
  height: 200%;
  background-image:
    linear-gradient(to right, hsl(var(--border) / 0.5) 1px, transparent 1px),
    linear-gradient(to bottom, hsl(var(--border) / 0.5) 1px, transparent 1px);
  background-size: 50px 50px;
  animation: pan 20s linear infinite;
}

.animated-grid::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle, transparent, hsl(var(--background)) 70%);
  z-index: 1;
}
